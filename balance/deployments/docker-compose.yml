version: "3.8"

services:
  web:
    container_name: balance-app
    build:
      context: ../
      dockerfile: build/balance/Dockerfile
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
    depends_on:
      - postgesql
    restart: always
    volumes:
      - ./:/app
    networks:
      - dev-network

  postgesql:
    image: postgres:14.0-alpine
    container_name: balance-postges
    ports:
      - "5432:5432"
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=balance_db
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - dev-network

  prometheus:
    container_name: prometheus_container
    image: prom/prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:Z
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=20d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - '9090:9090'
    networks:
      - dev-network

  node_exporter:
    container_name: node_exporter_container
    image: prom/node-exporter
    ports:
      - '9101:9100'
    networks:
      - dev-network

  grafana:
    container_name: grafana_container
    image: grafana/grafana
    ports:
      - '3000:3000'
    networks:
      - dev-network

  jaeger:
    container_name: jaeger_container
    restart: always
    image: jaegertracing/all-in-one:1.28
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    networks:
      - dev-network

networks:
  dev-network:
    name: dev-network
    driver: bridge

volumes:
  postgres: